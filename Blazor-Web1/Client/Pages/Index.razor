@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.AspNetCore.Components

@inject IAccessTokenProvider AuthenticationService
@inject NavigationManager Navigation
@inject HttpClient Http

@attribute [Authorize]

<div class="form-group">
    <label>
        Timer:
        <input class="form-control input-lg" @bind="_currentTime" />
    </label>
</div>

<button @onclick="Start" disabled="@(IsRunning)">Start Timer</button>
<button @onclick="Stop" disabled="@(!IsRunning)">Stop Timer</button>

<hr>

@code {

    private HubConnection _hubConnection;
    private string _currentTime;
    public bool IsRunning;
    private AccessTokenResult accessTokenResult;


    protected override async Task OnInitializedAsync()
    {
        Http.BaseAddress = new Uri(Navigation.BaseUri);
        accessTokenResult = await AuthenticationService.RequestAccessToken();

        _hubConnection = new HubConnectionBuilder()
        .WithUrl(Navigation.ToAbsoluteUri("/timer"))
        .Build();

        _hubConnection.On<string>("ReceiveTime", (currentTime) =>
        {
            if (!IsRunning) IsRunning = true;

            _currentTime = currentTime;
            StateHasChanged();
        });

        _hubConnection.On("StopTime", () =>
        {
            if (IsRunning) IsRunning = false;
            StateHasChanged();
        });

        await _hubConnection.StartAsync();
    }

    Task Start() =>
        _hubConnection.SendAsync("Start");

    Task Stop() =>
        _hubConnection.SendAsync("Stop");

}